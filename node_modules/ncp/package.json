{
<<<<<<< HEAD
  "_args": [
    [
      "ncp@2.0.0",
      "C:\\Users\\Home\\Documents\\GitHub\\CapstoneProject"
    ]
  ],
  "_from": "ncp@2.0.0",
  "_id": "ncp@2.0.0",
  "_inBundle": false,
  "_integrity": "sha512-zIdGUrPRFTUELUvr3Gmc7KZ2Sw/h1PiVM0Af/oHB6zgnV1ikqSfRk+TOufi79aHYCW3NiOXmr1BP5nWbzojLaA==",
  "_location": "/ncp",
  "_optional": true,
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "ncp@2.0.0",
    "name": "ncp",
    "escapedName": "ncp",
    "rawSpec": "2.0.0",
    "saveSpec": null,
    "fetchSpec": "2.0.0"
  },
  "_requiredBy": [
    "/mv"
  ],
  "_resolved": "https://registry.npmjs.org/ncp/-/ncp-2.0.0.tgz",
  "_spec": "2.0.0",
  "_where": "C:\\Users\\Home\\Documents\\GitHub\\CapstoneProject",
  "author": {
    "name": "AvianFlu",
    "email": "charlie@charlieistheman.com"
  },
  "bin": {
    "ncp": "bin/ncp"
  },
  "bugs": {
    "url": "https://github.com/AvianFlu/ncp/issues"
  },
  "description": "Asynchronous recursive file copy utility.",
  "devDependencies": {
    "mocha": "1.15.x",
    "read-dir-files": "0.0.x",
    "rimraf": "1.0.x"
  },
  "engine": {
    "node": ">=0.10"
  },
  "homepage": "https://github.com/AvianFlu/ncp#readme",
=======
  "name": "ncp",
  "version": "2.0.0",
  "author": "AvianFlu <charlie@charlieistheman.com>",
  "description": "Asynchronous recursive file copy utility.",
  "bin": {
    "ncp": "./bin/ncp"
  },
  "devDependencies": {
    "mocha": "1.15.x",
    "rimraf": "1.0.x",
    "read-dir-files": "0.0.x"
  },
  "main": "./lib/ncp.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/AvianFlu/ncp.git"
  },
>>>>>>> Farah
  "keywords": [
    "cli",
    "copy"
  ],
  "license": "MIT",
<<<<<<< HEAD
  "main": "./lib/ncp.js",
  "name": "ncp",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/AvianFlu/ncp.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "version": "2.0.0"
=======
  "engine": {
    "node": ">=0.10"
  },
  "scripts": {
    "test": "mocha -R spec"
  }
>>>>>>> Farah
}
